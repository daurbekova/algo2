using System;
using System.Collections.Generic;

public class TreeNode
{
    public int val;
    public TreeNode left;
    public TreeNode right;

    public TreeNode(int val = 0, TreeNode left = null, TreeNode right = null)
    {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

public class Program
{
    public static void ToDo(TreeNode node, List<int> lst)
    {
        if (node == null)
            return;
        ToDo(node.left, lst);
        ToDo(node.right, lst);
        lst.Add(node.val);
    }

    public static void PrintList(List<int> lst)
    {
        string output = "";
        foreach (int x in lst)
        {
            output += x.ToString() + " ";
        }
        Console.WriteLine(output.Trim());
    }

    public static TreeNode TreeTest1()
    {
        TreeNode tree = new TreeNode(1);
        tree.left = new TreeNode(2);
        tree.right = new TreeNode(3);
        tree.right.left = new TreeNode(3);
        tree.right.right = new TreeNode(4);
        return tree;
    }

    public static TreeNode TreeTest2()
    {
        TreeNode tree = new TreeNode(1);
        tree.right = new TreeNode(2);
        tree.right.left = new TreeNode(3);
        return tree;
    }

    public static TreeNode TreeTest3()
    {
        return null;
    }

    public static TreeNode TreeTest4()
    {
        return new TreeNode(1);
    }

    public static TreeNode GetTreeTest(string s)
    {
        if (s == "1 2 3 null null 3 4")
            return TreeTest1();
        else if (s == "1 null 2 3")
            return TreeTest2();
        else if (s == "")
            return TreeTest3();
        else if (s == "1")
            return TreeTest4();
        else
            return null;
    }

    public static void Main(string[] args)
    {
        string terminal = Console.ReadLine();

        List<int> outputNode = new List<int>();
        ToDo(GetTreeTest(terminal), outputNode);
        PrintList(outputNode);
    }
}
